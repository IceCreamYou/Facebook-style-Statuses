<?php
// $Id$

/**
 * @file
 *   (Un)installs the Facebook-style Statuses module.
 */

/**
 * Implementation of hook_schema().
 */
function facebook_status_schema() {
  $schema = array();
  $schema['facebook_status'] = array(
    'description' => 'Stores statuses.',
    'fields' => array(
      'sid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'description' => 'The Status ID.',
      ),
      'sender' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The User ID of the user who created the status message.',
      ),
      'recipient' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The ID of the entity that received the status message..',
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The stream context type.',
      ),
      'created' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The time the status message was saved.',
      ),
      'message' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'The status message.',
      ),
    ),
    'indexes' => array(
      'sender' => array('sender'),
      'recipient' => array('recipient'),
      'type' => array('type'),
      'created' => array('created'),
    ),
    'primary key' => array('sid'),
  );
  $schema += _facebook_status_contexts_schema();
  return $schema;
}

/**
 * Specifies the schema for the contexts table.
 */
function _facebook_status_contexts_schema() {
  $schema = array();
  $schema['facebook_status_contexts'] = array(
    'description' => 'Stores stream context configurations.',
    'fields' => array(
      'type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The stream context type.',
      ),
      'weight' => array(
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The weight of the component.',
      ),
      'view' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The view used as the stream.',
      ),
      'selectors' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'Additional DOM selectors representing sections of the page that should be automatically refreshed via AJAX when a status is saved.',
      ),
    ),
    'indexes' => array(
      'weight' => array('weight'),
    ),
    'primary key' => array('type'),
  );
  return $schema;
}

/**
 * Implementation of hook_install().
 */
function facebook_status_install() {
  drupal_install_schema('facebook_status');
}

/**
 * Implementation of hook_update_N().
 */
function facebook_status_update_6300() {
  // Remove old variables.
  variable_del('facebook_status_profile_view');
  variable_del('facebook_status_special_user');
  variable_del('facebook_status_hide_status');
  variable_del('facebook_status_flag_update');
  variable_del('facebook_status_flood_user');
  variable_del('facebook_status_hide_blank');
  variable_del('facebook_status_size_long');
  variable_del('facebook_status_default');
  variable_del('facebook_status_exclude');
  variable_del('facebook_status_concat');
  variable_del('facebook_status_legacy');
  variable_del('facebook_status_size');
  variable_del('facebook_status_type');

  $ret = array();

  // Drop current indexes.
  db_drop_index($ret, 'facebook_status', 'uid');
  db_drop_index($ret, 'facebook_status', 'pid');
  db_drop_index($ret, 'facebook_status', 'status_time');

  // Rename fields and add 'type'.
  db_change_field($ret, 'facebook_status', 'uid', 'recipient', array(
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
    'description' => 'The ID of the entity that received the status message.',
  ));
  db_change_field($ret, 'facebook_status', 'pid', 'sender', array(
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
    'description' => 'The User ID of the user who created the status message.',
  ));
  db_change_field($ret, 'facebook_status', 'status_time', 'created', array(
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
    'description' => 'The time the status message was saved.',
  ));
  db_change_field($ret, 'facebook_status', 'status', 'message', array(
    'type' => 'text',
    'not null' => TRUE,
    'description' => 'The status message.',
  ));
  db_add_field($ret, 'facebook_status', 'type', array(
    'type' => 'varchar',
    'length' => 255,
    'not null' => TRUE,
    'default' => '',
    'description' => 'The stream context type.',
  ));

  // Add indexes again.
  db_add_index($ret, 'facebook_status', 'recipient', array('recipient'));
  db_add_index($ret, 'facebook_status', 'sender', array('sender'));
  db_add_index($ret, 'facebook_status', 'created', array('created'));
  db_add_index($ret, 'facebook_status', 'type', array('type'));

  // Update the type field in existing records.
  $ret[] = update_sql("UPDATE {facebook_status} SET type = 'user'");

  // Create the contexts table.
  if (!db_table_exists('facebook_status_contexts')) {
    $schema = _facebook_status_contexts_schema();
    db_create_table($ret, 'facebook_status_contexts', $schema['facebook_status_contexts']);
  }

  // If the legacy fbssc module exists, upgrade it to the fbss_comments module.
  if (module_exists('fbssc') && !module_exists('fbss_comments')) {
    module_disable(array('fbssc'));
    drupal_install_modules(array('fbss_comments'));
  }

  return $ret;
}

/**
 * Implementation of hook_uninstall().
 */
function facebook_status_uninstall() {
  drupal_uninstall_schema('facebook_status');
  variable_del('facebook_status_default_text');
  variable_del('facebook_status_block_view');
  variable_del('facebook_status_reply_type');
  variable_del('facebook_status_share_view');
  variable_del('facebook_status_box_rows');
  variable_del('facebook_status_profile');
  variable_del('facebook_status_refresh');
  variable_del('facebook_status_filter');
  variable_del('facebook_status_length');
  variable_del('facebook_status_repost');
  variable_del('facebook_status_nl2br');
  variable_del('facebook_status_ahah');
}
